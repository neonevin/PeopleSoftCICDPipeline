@Library("dev-lib") _
def uname
def pwd
pipeline {
    agent any

    stages {
        stage('Hello') {
            steps {
                echo 'Hello World'
            }
        }
                stage ("Update build status"){
            steps {
               script {
               
                 try {
                      buildInfra = true //input message: 'Is build successful', parameters: [[$class: 'ChoiceParameterDefinition', choices:'Yes\nNo', description: 'If build successful, click on Yes. Else, click on No', name: 'Build Successful?']]
                   }
                 catch (err) {
                      buildInfra = true
                 }
                 
              }
            }
        }
        stage ('lib call'){
            steps{
                //helloWorld(name:"Nevin",dayOfWeek:"Monday")
                 withCredentials([usernamePassword(credentialsId: 'phire_api_cred', usernameVariable: 'USERNAME', passwordVariable: 'USERPASS')]){
                     println env.USERNAME
                     println env.USERPASS
                     script{
                     uname = env.USERNAME
                     pwd = env.USERPASS
                     
                     }
                     //jsonMessage(uname,pwd)
                     //jsonMessage()
                    //
                    //println uname
                    //println pwd
                 }
                //println TICKET_ID + " "+  PHIRE_NUM +  " " + REQUEST_USER
                PhireRequest(uname, pwd, PHIRE_NUM, TICKET_STATUS, ISSUE_ASSIGNEE, ISSUE_ASSIGNEE_EMAIL, 'S', TICKET_ID, LAST_COMMENT_BODY, REQUEST_USER, REQUEST_USER_EMAIL, 'http://140.238.207.38:8000//PSIGW/RESTListeningConnector/PSFT_HR/DEL_API_CR_NEXT_STEP.v1/')
                //println "Jira value is: " + JIRA_ISSUE_KEY
                //println "assignee  is: " + ISSUE_ASSIGNEE
                //jsonMessage(uname,pwd)
            }                
            
        }
        stage ("Send back build status"){
            steps {
                script {
            if (buildInfra == 'Yes') 
                 {
                //def fixedInBuild = [fields: [customfield_10011: 'Build is successful. Find additional comments in Comment Box']]
                //def transitionInput = [transition: [id: '61']]
                //jiraTransitionIssue idOrKey: JIRA_ISSUE_KEY, input: transitionInput, site: 'JIRA'
                //jiraEditIssue idOrKey: JIRA_ISSUE_KEY, issue: fixedInBuild, site: 'JIRA'
                //messaging = input message: 'Any additional comments?', parameters: [text(defaultValue: '', description: 'Enter any additional comments', name: 'COMMENT')]
                messaging = 'Phire step completed for ' + PHIRE_NUM
                //jiraAddComment comment: messaging, idOrKey: JIRA_ISSUE_KEY, site: 'JiraSSL'
                jiraAddComment comment: messaging, idOrKey: JIRA_ISSUE_KEY, site: 'JiraSSL'
                }
            else 
            {
                //def fixedInBuild = [fields: [customfield_10011: 'Build Failed. Find reasons in Comment Box']]
                def transitionInput = [transition: [id: '41']]
               // jiraTransitionIssue idOrKey: JIRA_ISSUE_KEY, input: transitionInput, site: 'JIRA'
               // jiraEditIssue idOrKey: JIRA_ISSUE_KEY, issue: fixedInBuild, site: 'JIRA'
                //messaging = input message: 'Why did the build fail?', parameters: [text(defaultValue: '', description: 'Enter reasons for build failure', name: 'COMMENT')]
                messaging = 'Phire step completed for ' + PHIRE_NUM
                jiraAddComment comment: messaging, idOrKey: JIRA_ISSUE_KEY, site: 'JiraSSL'
            }
           }       
          }
        }  
    }
}
